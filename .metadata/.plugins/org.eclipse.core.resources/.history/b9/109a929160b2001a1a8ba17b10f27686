// generated with ast extension for cup
// version 0.8
// 19/5/2020 18:47:13


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(StatementsList StatementsList);
    public void visit(FormParamsList FormParamsList);
    public void visit(ProgramElementsList ProgramElementsList);
    public void visit(ActualParamsList ActualParamsList);
    public void visit(TermTar TermTar);
    public void visit(OneConst OneConst);
    public void visit(OneVar OneVar);
    public void visit(VarsElementsList VarsElementsList);
    public void visit(MulOpLeft MulOpLeft);
    public void visit(Factor Factor);
    public void visit(NumbersList NumbersList);
    public void visit(ConstList ConstList);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(GlobalVariable GlobalVariable);
    public void visit(MulOp MulOp);
    public void visit(AddOpRight AddOpRight);
    public void visit(FormParams FormParams);
    public void visit(NewArrayType NewArrayType);
    public void visit(MethCall MethCall);
    public void visit(AssignOp AssignOp);
    public void visit(ActualParams ActualParams);
    public void visit(ArrayDecl ArrayDecl);
    public void visit(VarsList VarsList);
    public void visit(NumbersListOptional NumbersListOptional);
    public void visit(TarOp TarOp);
    public void visit(VoidType VoidType);
    public void visit(AddOp AddOp);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Assignment Assignment);
    public void visit(ProgramElement ProgramElement);
    public void visit(Statement Statement);
    public void visit(Expression Expression);
    public void visit(VarDecl VarDecl);
    public void visit(AddOpLeft AddOpLeft);
    public void visit(MulOpRight MulOpRight);
    public void visit(MethodsList MethodsList);
    public void visit(FormParam FormParam);
    public void visit(GlobalVarDeclList GlobalVarDeclList);
    public void visit(TarOp_Tar TarOp_Tar);
    public void visit(MulOp_ModulateEqual MulOp_ModulateEqual);
    public void visit(MulOp_DivideEqual MulOp_DivideEqual);
    public void visit(MulOp_MultiplyEqual MulOp_MultiplyEqual);
    public void visit(AddOp_MinusEqual AddOp_MinusEqual);
    public void visit(AddOp_PlusEqual AddOp_PlusEqual);
    public void visit(MulOp_Modulate MulOp_Modulate);
    public void visit(MulOp_Divide MulOp_Divide);
    public void visit(MulOp_Multiply MulOp_Multiply);
    public void visit(AddOp_Minus AddOp_Minus);
    public void visit(AddOp_Plus AddOp_Plus);
    public void visit(MulOp_MulOpLeft MulOp_MulOpLeft);
    public void visit(MulOp_MulOpRight MulOp_MulOpRight);
    public void visit(AddOp_AddOpLeft AddOp_AddOpLeft);
    public void visit(AddOp_AddOpRight AddOp_AddOpRight);
    public void visit(AssignOp_MulOpRight AssignOp_MulOpRight);
    public void visit(AssignOp_AddOpRight AssignOp_AddOpRight);
    public void visit(AssignOp_Equals AssignOp_Equals);
    public void visit(NoNewArray NoNewArray);
    public void visit(NewArray NewArray);
    public void visit(FactorMethCall FactorMethCall);
    public void visit(DesigFactor DesigFactor);
    public void visit(ParenFactor ParenFactor);
    public void visit(NewFactor NewFactor);
    public void visit(ConstFactor ConstFactor);
    public void visit(SingleFactor SingleFactor);
    public void visit(FactorMulOp FactorMulOp);
    public void visit(SingleTerm SingleTerm);
    public void visit(TermTarOp TermTarOp);
    public void visit(SingleTermTar SingleTermTar);
    public void visit(SingleTermTarMinus SingleTermTarMinus);
    public void visit(TermAddOp TermAddOp);
    public void visit(Empty Empty);
    public void visit(Expr Expr);
    public void visit(PreArrIdxDummy PreArrIdxDummy);
    public void visit(DesignatorError DesignatorError);
    public void visit(DesignatorArray DesignatorArray);
    public void visit(DesignatorAt DesignatorAt);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(Assignment_Error Assignment_Error);
    public void visit(Assignment_Expr Assignment_Expr);
    public void visit(OneActualParam OneActualParam);
    public void visit(ActualParametersList ActualParametersList);
    public void visit(NoActualParams NoActualParams);
    public void visit(ActualParameters ActualParameters);
    public void visit(MethodCall MethodCall);
    public void visit(DesStmMethodCall DesStmMethodCall);
    public void visit(Decrement Decrement);
    public void visit(Increment Increment);
    public void visit(AssignmentDesignator AssignmentDesignator);
    public void visit(NumbersListDerived2 NumbersListDerived2);
    public void visit(NumbersListDerived1 NumbersListDerived1);
    public void visit(NumbersListOptionalDerived2 NumbersListOptionalDerived2);
    public void visit(NumbersListOptionalDerived1 NumbersListOptionalDerived1);
    public void visit(ReturnStmWithValue ReturnStmWithValue);
    public void visit(ReturnStmEmpty ReturnStmEmpty);
    public void visit(PrintStmt PrintStmt);
    public void visit(ReadStmt ReadStmt);
    public void visit(DesignatorStmt DesignatorStmt);
    public void visit(StatementsListDerived1 StatementsListDerived1);
    public void visit(ListStatements ListStatements);
    public void visit(ArrayFormParam ArrayFormParam);
    public void visit(FormParamIdent FormParamIdent);
    public void visit(OneParam OneParam);
    public void visit(FormParametersList FormParametersList);
    public void visit(NoFormParams NoFormParams);
    public void visit(FormParameters FormParameters);
    public void visit(VoidMethod VoidMethod);
    public void visit(TypeMethod TypeMethod);
    public void visit(MethodName MethodName);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDeclarations NoMethodDeclarations);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(Type Type);
    public void visit(NoVarListDeclarations NoVarListDeclarations);
    public void visit(VarListDeclarations VarListDeclarations);
    public void visit(VarsElementsListDerived2 VarsElementsListDerived2);
    public void visit(SignleVar SignleVar);
    public void visit(VarsElementsListDerived1 VarsElementsListDerived1);
    public void visit(ListVar ListVar);
    public void visit(ErrorVarDecl ErrorVarDecl);
    public void visit(TypeVarsElementsList TypeVarsElementsList);
    public void visit(OneVarArray OneVarArray);
    public void visit(Var Var);
    public void visit(GlobalVarError GlobalVarError);
    public void visit(OneGlobalVarDecl OneGlobalVarDecl);
    public void visit(GlobalVarDeclList_Item GlobalVarDeclList_Item);
    public void visit(GlobalVarDeclList_List GlobalVarDeclList_List);
    public void visit(GlobalVarDecl GlobalVarDecl);
    public void visit(Bool Bool);
    public void visit(Char Char);
    public void visit(Const Const);
    public void visit(SingleConst SingleConst);
    public void visit(ListConst ListConst);
    public void visit(ConstDecl ConstDecl);
    public void visit(ProgramElementVarDecl ProgramElementVarDecl);
    public void visit(ProgramElementConstDecl ProgramElementConstDecl);
    public void visit(NoProgramElementsList NoProgramElementsList);
    public void visit(ProgramElementList ProgramElementList);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
